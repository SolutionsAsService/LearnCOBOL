IDENTIFICATION DIVISION.
PROGRAM-ID. PasswordPolicyCompliance.
AUTHOR. Your Name.

ENVIRONMENT DIVISION.
INPUT-OUTPUT SECTION.
FILE-CONTROL.
    SELECT user-accounts ASSIGN TO 'user-accounts.dat'.
    SELECT policy-violations ASSIGN TO 'policy-violations.dat'.

DATA DIVISION.
FILE SECTION.
FD user-accounts.
01 USER-ACCOUNT-RECORD.
    05 USER-ID               PIC X(10).
    05 PASSWORD              PIC X(20).
    05 LAST-PASSWORD-CHANGE  PIC 9(8).

FD policy-violations.
01 POLICY-VIOLATION-RECORD.
    05 PV-USER-ID            PIC X(10).
    05 VIOLATION-REASON      PIC X(50).

WORKING-STORAGE SECTION.
01 WS-CURRENT-DATE          PIC 9(8) VALUE 20231015.
01 PASSWORD-POLICY.
    05 MIN-LENGTH            PIC 9 VALUE 8.
    05 MAX-AGE-DAYS          PIC 9(4) VALUE 90.
01 WS-END-OF-FILE           PIC X VALUE 'N'.
    88 EOF                   VALUE 'Y'.
    88 NOT-EOF               VALUE 'N'.
01 DAYS-SINCE-LAST-CHANGE   PIC 9(4).

PROCEDURE DIVISION.
BEGIN.
    OPEN INPUT user-accounts
        OUTPUT policy-violations
    PERFORM PROCESS-ACCOUNTS UNTIL EOF
    CLOSE user-accounts policy-violations
    STOP RUN.

PROCESS-ACCOUNTS.
    READ user-accounts INTO USER-ACCOUNT-RECORD AT END SET EOF TO TRUE.
    PERFORM UNTIL EOF
        PERFORM CHECK-PASSWORD-POLICY
        READ user-accounts INTO USER-ACCOUNT-RECORD AT END SET EOF TO TRUE.
    END-PERFORM.

CHECK-PASSWORD-POLICY.
    IF LENGTH OF PASSWORD < MIN-LENGTH
        PERFORM REPORT-VIOLATION "Password does not meet minimum length requirement"
    END-IF
    COMPUTE DAYS-SINCE-LAST-CHANGE = FUNCTION DAYS-TO-DATE(WS-CURRENT-DATE) -
                                     FUNCTION DAYS-TO-DATE(LAST-PASSWORD-CHANGE)
    IF DAYS-SINCE-LAST-CHANGE > MAX-AGE-DAYS
        PERFORM REPORT-VIOLATION "Password exceeds maximum age"
    END-IF.

REPORT-VIOLATION SECTION.
    MOVE USER-ID TO PV-USER-ID
    MOVE VIOLATION-REASON TO VIOLATION-REASON
    WRITE POLICY-VIOLATION-RECORD.
